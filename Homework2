#include<pthread.h>
#include<stdio.h>
#include<stdlib.h>
#define MAX 5

pthread_mutex_t the_mutex;

int buffer = 0;

int total = 0;

int array[5000];

void *producer(void *ptr)
{
	int tid=ptr;
	
	int lowerlimit = (tid - 1) * 1000;
	int upperlimit = (tid * 1000) - 1;


	for (int i = lowerlimit; i <= upperlimit; i++) {

		//pthread_mutex_lock(&the_mutex);
		
		total = total + array[i];
		//pthread_mutex_unlock(&the_mutex);
	}
	
	pthread_exit(0);
}

int main(int argc, char *argv[])
{
	for (int i = 1; i <=5000; i++)
	{
		array[i] = i;
	}
	pthread_t pro[MAX+1];

	pthread_mutex_init(&the_mutex, 0);

	for (int i = 1; i <= MAX; i++)
	{
		pthread_create(&pro[i], 0, producer, (void *)i);
	}
	for (int i = 1; i <= MAX; i++)
	{
		pthread_join(pro[i], 0);
	}
	printf("%d", total);
	pthread_mutex_destroy(&the_mutex);

}
